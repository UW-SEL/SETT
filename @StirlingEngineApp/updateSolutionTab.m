function updateSolutionTab(app, switchToTab)
    % UPDATESOLUTIONTAB Update the Solution tab with new values

    if nargin < 2
        switchToTab = false;
    end

    % The Solution tab is initialized if its grid does not yet exist
    % (this happens when the app is first initialized)
    if ~isKey(app.uiGrids, "solution")
        tab = uitab(app.tabGroup, "Title", "Solution");
        app.uiGrids("solution") = uigridlayout(tab);
    end

    gridLayout = app.uiGrids("solution");
    delete(gridLayout.Children)

    if ~app.engine.isSolutionAvailable
        gridLayout.ColumnWidth = {"fit"};
        gridLayout.RowHeight = {"fit"};
        uilabel(gridLayout, "Text", "An engine update is required");
        return
    end

    gridLayout.ColumnWidth = {"fit", "1x"};
    gridLayout.RowHeight = {"1x"};

    pg = uigridlayout(           ...
        gridLayout,              ...
        "ColumnWidth", {"fit"},  ...
        "RowHeight", {"fit"}     ...
    );
    p = uipanel(pg, "Title", "Performance");
    gg = uigridlayout(                  ...
        p,                              ...
        "ColumnWidth", {"fit", "fit"},  ...
        "RowHeight", {"fit", "fit"}     ...
    );
    uilabel(                            ...
        gg,                             ...
        "Text", "Net Power",            ...
        "HorizontalAlignment", "right"  ...
    );
    uilabel(                                                    ...
        gg,                                                     ...
        "Text", sprintf("%.2f kW", app.engine.netPower * 1e-3)  ...
    );
    uilabel(                            ...
        gg,                             ...
        "Text", "Efficiency",           ...
        "HorizontalAlignment", "right"  ...
    );
    uilabel(                                                     ...
        gg,                                                      ...
        "Text", sprintf("%.2f %%", app.engine.efficiency * 100)  ...
    );
    uilabel(                            ...
        gg,                             ...
        "Text", "Ave. Pressure",        ...
        "HorizontalAlignment", "right"  ...
    );
    uilabel(                                                  ...
        gg,                                                   ...
        "Text", sprintf("%.3f MPa", app.engine.P_ave * 1e-6)  ...
    );

    ggg = uigridlayout(               ...
        gridLayout,                   ...
        "ColumnWidth", {"1x", "1x"},  ...
        "RowHeight", {"1x"}           ...
    );

    p1 = uiaxes(ggg);
    p2 = uiaxes(ggg);

    app.engine.plot("pv-diagram", "uiAxes", p1, "plotTitle", "PV Diagram", "showIdealPressure", true)
    app.engine.plot("ode-solution", "uiAxes", p2, "plotTitle", "ODE Solution")

    if switchToTab
        app.tabGroup.SelectedTab = gridLayout.Parent;
    end
    drawnow()
end
