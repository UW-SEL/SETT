function updateConditionsTab(app, conditions)
    % UPDATECONDITIONSTAB Update the Conditions tab with new values

    % The Conditions tab is initialized if conditions are not provided
    % (this happens when the app is first initialized)
    if nargin < 2
        % Use the default conditions
        conditions = struct( ...
            "T_cold", 323,   ...
            "T_hot", 973,    ...
            "P_0", 1e+07     ...
        );

        % Create the Conditions tab and grid
        conditionsTab = uitab(app.tabGroup, "Title", "Conditions");
        app.uiGrids("conditions") = uigridlayout(  ...
            conditionsTab,                         ...
            "ColumnWidth", {"fit", "fit"},         ...
            "RowHeight", {"fit"}                   ...
        );
    else
        delete(app.uiGrids("conditions").Children)  % clear existing inputs
    end

    inputs = containers.Map;
    createInput = @StirlingEngineApp.createNumericInput;

    gridLayout = app.uiGrids("conditions");
    tempPanelGrid = StirlingEngineApp.createInputPanel(gridLayout, "Temperature");
    presPanelGrid = StirlingEngineApp.createInputPanel(gridLayout, "Pressure");

    inputs("T_cold") = createInput(   ...
        tempPanelGrid,                ...
        "Label", "Sink",              ...
        "Units", "K",                 ...
        "Value", conditions.T_cold,   ...
        "LowerLimit", 0,              ...
        "LowerLimitInclusive", "off"  ...
    );
    inputs("T_hot") = createInput(    ...
        tempPanelGrid,                ...
        "Label", "Source",            ...
        "Units", "K",                 ...
        "Value", conditions.T_hot,    ...
        "LowerLimit", 0,              ...
        "LowerLimitInclusive", "off"  ...
    );
    inputs("P_0") = createInput(         ...
        presPanelGrid,                   ...
        "Label", "Time Zero",            ...
        "Units", "MPa",                  ...
        "Value", conditions.P_0 * 1e-6,  ...
        "LowerLimit", 0,                 ...
        "LowerLimitInclusive", "off"     ...
    );


    app.getConditions = @getConditionsFunc;
    function r = getConditionsFunc()
        r.T_cold = inputs("T_cold").Value;
        r.T_hot = inputs("T_hot").Value;
        r.P_0 = inputs("P_0").Value * 1e6;  % convert MPa to Pa
    end
end
