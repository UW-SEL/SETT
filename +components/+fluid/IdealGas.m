% Ideal Gas

classdef IdealGas
    properties (Constant)
        defaultParams = struct(  ...
            "name", "Hydrogen"   ...
        )
    end

    properties (SetAccess = private)
        R
        T_ref
        a
        b
        c
    end

    methods
        function obj = IdealGas(params)
            switch params.name
                case "Helium"
                    obj.R = 2077.23;
                    obj.T_ref = 250;
                    obj.a = [     ...
                        5193.17   ...
                        0         ...
                        0         ...
                        0         ...
                        0         ...
                        0         ...
                    ];
                    obj.b = [            ...
                        0.05516          ...
                        0.0003254        ...
                        -2.27230000E-08  ...
                        0                ...
                        0                ...
                        0                ...
                    ];

                    obj.c = [            ...
                        0.0000071094     ...
                        4.43000000E-08   ...
                        -5.18000000E-12  ...
                        0                ...
                        0                ...
                        0                ...
                    ];
                case "Hydrogen"
                    obj.R = 4124.2;
                    obj.T_ref = 250;
                    obj.a = [            ...
                        12471.4839       ...
                        13.3194432       ...
                        -0.0347782806    ...
                        0.0000431784838  ...
                        -2.42883335E-08  ...
                        5.14289838E-12   ...
                    ];
                    obj.b = [            ...
                        0.0444697807     ...
                        0.000493824871   ...
                        -1.67948837E-07  ...
                        5.69883000E-11   ...
                        0                ...
                        0                ...
                    ];
                    obj.c = [             ...
                        0.00000242740665  ...
                        2.37814192E-08    ...
                        -7.11281496E-12   ...
                        1.62556323E-15    ...
                        0                 ...
                        0                 ...
                    ];
 
                otherwise
                    error("Unknown gas name: %s", params.name)
            end
        end

        function r = allProps(obj, T, P)
            % TODO: consider using Horner"s method for calculating polynomials

            R = obj.R;
            T_ref = obj.T_ref;
            a=obj.a;
            b=obj.b;
            c=obj.c;
            CP = a(1) + a(2) * T + a(3) * T.^2 + a(4) * T.^3 + a(5) * T.^4 + a(6) * T.^5;
            CV = CP - R;

            r.rho = obj.density(T, P);

            r.h = a(1) * (T - T_ref) + (a(2)/2) * (T.^2 - T_ref^2) + (a(3)/3) * (T.^3 - T_ref^3) + (a(4)/4) * (T.^4 - T_ref^4) + (a(5)/5) * (T.^5 - T_ref^5) + (a(6)/6) * (T.^6 - T_ref^6);
            r.u = (a(1) - R) * (T - T_ref) + (a(2)/2) * (T.^2 - T_ref^2) + (a(3)/3) * (T.^3 - T_ref^3) + (a(4)/4) * (T.^4 - T_ref^4) + (a(5)/5) * (T.^5 - T_ref^5) + (a(6)/6) * (T.^6 - T_ref^6);
            r.drho_dT_P = -P ./ (R * T.^2);
            r.drho_dP_T = 1 ./ (R * T);
            r.du_dT_P = CV;
            r.du_dP_T = 0;
            r.k = b(1) + b(2) * T + b(3) * T.^2 + b(4) * T.^3 + b(5) * T.^4 + b(6) * T.^5;
            r.mu = c(1) + c(2) * T + c(3) * T.^2 + c(4) * T.^3 + c(5) * T.^4 + c(6) * T.^5;
            r.CP = CP;
        end

        function r = density(obj, T, P)
            r = P ./ (obj.R * T);
        end

        function r = enthalpy(obj, T, P)
            props = obj.allProps(T, P);
            r = props.h;
        end
    end

    methods (Static)
        function getParams = createUI(gridLayout, params)
            gridLayout.ColumnWidth = {"fit"};
            gridLayout.RowHeight = {"fit"};
            nameDropdown = uidropdown(            ...
                gridLayout,                       ...
                "Items", ["Helium", "Hydrogen"],  ...
                "Value", params.name              ...
            );

            getParams = @getParamsFunc;
            function r = getParamsFunc()
                r = struct("name", nameDropdown.Value);
            end
        end
    end
end
